@using BlazoriseOutlookClone.States
@inherits LayoutComponentBase

<Div Background="Background.Primary" Flex="Flex.Default.AlignItems.Center.JustifyContent.Between" Padding="Padding.Is2" Gap="Gap.Is3">
    <Div Display="Display.InlineFlex" Width="Width.Is100">
        <Button Border="Border.Is0" Background="Background.Transparent" TextColor="TextColor.White">
            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.GridDots" IconSize="IconSize.Large" />
        </Button>
        <Div TextSize="TextSize.Heading5" Padding="Padding.Is5.OnX">
            <Span Flex="Flex.AlignItems.Center.JustifyContent.Center.NoWrap" Height="Height.Is100">
                <Anchor To="mail" Title="Link to mail" TextColor="TextColor.White" TextWeight="TextWeight.SemiBold" Unstyled>Blazor Mail</Anchor>
            </Span>
        </Div>
        <Div Margin="Margin.Is5.FromStart" Width="Width.Is25">
            <TextEdit Role="TextRole.Search" Placeholder="Search" Width="Width.Max100" />
        </Div>
    </Div>
    <Div Flex="Flex.JustifyContent.End.AlignItems.Stretch" Gap="Gap.Is2">
        <Button Border="Border.Is0" Background="Background.Transparent" TextColor="TextColor.White" Clicked="@ToggleTheme">
            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.DarkTheme" IconSize="IconSize.Large" />
        </Button>
        <Button Border="Border.Is0" Background="Background.Transparent" TextColor="TextColor.White">
            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.ChatMultiple" IconSize="IconSize.Large" />
        </Button>
        <Button Border="Border.Is0" Background="Background.Transparent" TextColor="TextColor.White">
            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.CalendarEdit" IconSize="IconSize.Large" />
        </Button>
        <Button Border="Border.Is0" Background="Background.Transparent" TextColor="TextColor.White">
            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.Alert" IconSize="IconSize.Large" />
        </Button>
        <Button Border="Border.Is0" Background="Background.Transparent" TextColor="TextColor.White" Clicked="@ShowSettings">
            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.Settings" IconSize="IconSize.Large" />
        </Button>

        <Dropdown RightAligned>
            <DropdownToggle Border="Border.Is0" Background="Background.Transparent" Padding="Padding.Is0" ToggleIconVisible="false">
                <Image Source="_content/BlazoriseOutlookClone.UI/avatar01.jpg" Width="Width.Rem( 2 )" Height="Height.Rem( 2 )" Border="Border.RoundedCircle" />
            </DropdownToggle>
            <DropdownMenu Width="Width.Px( 350 )" Padding="Padding.Is3" Class="avatar-menu">
                <Div Flex="Flex.JustifyContent.Between.AlignItems.Center" Margin="Margin.Is3.FromBottom">
                    <Div>
                        Fake Company Ltd
                    </Div>
                    <Button Border="Border.Is0" Background="Background.Transparent">
                        Sign out
                    </Button>
                </Div>
                <Div Flex="Flex.AlignItems.Center" Gap="Gap.Is3">
                    <Div>
                        <Image Source="_content/BlazoriseOutlookClone.UI/avatar01.jpg" Width="Width.Rem( 5 )" Height="Height.Rem( 5 )" Border="Border.RoundedCircle" />
                    </Div>
                    <Div Flex="Flex.Column.JustifyContent.Start.AlignItems.Start">
                        <Div TextWeight="TextWeight.SemiBold" TextSize="TextSize.Large">
                            John Doe
                        </Div>
                        <Div TextColor="TextColor.Muted">
                            john.doe@example.com
                        </Div>
                    </Div>
                </Div>
            </DropdownMenu>
        </Dropdown>
    </Div>
</Div>
<Layout Sider>
    <LayoutSider Background="Background.Transparent">
        <LayoutSiderContent Shadow="Shadow.Small" Padding="Padding.Is1" Flex="Flex.Column.AlignItems.Start" Width="Width.Rem( 3 )">
            <Tabs @bind-SelectedTab="@ApplicationState.CurrentPage" Flex="Flex.Column.AlignItems.Start" TabPosition="TabPosition.Start">
                <Items>
                    <Tab Name="mail" Clicked="@(() => ChangePage( "mail" ))">
                        <Image Source="_content/BlazoriseOutlookClone.UI/img/MailIcon.svg" Width="Width.Px( 20 )" Height="Height.Px( 20 )" />
                    </Tab>
                    <Tab Name="calendar" Clicked="@(() => ChangePage( "calendar" ))">
                        <Image Source="_content/BlazoriseOutlookClone.UI/img/CalendarIcon.svg" Width="Width.Px( 20 )" Height="Height.Px( 20 )" />
                    </Tab>
                    <Tab Name="people" Clicked="@(() => ChangePage( "people" ))">
                        <Image Source="_content/BlazoriseOutlookClone.UI/img/PeopleIcon.svg" Width="Width.Px( 20 )" Height="Height.Px( 20 )" />
                    </Tab>
                    <Tab Name="todo" Clicked="@(() => ChangePage( "todo" ))">
                        <Image Source="_content/BlazoriseOutlookClone.UI/img/TodoIcon.png" Width="Width.Px( 20 )" Height="Height.Px( 20 )" />
                    </Tab>
                </Items>
            </Tabs>
        </LayoutSiderContent>
    </LayoutSider>
    <Layout>
        <LayoutContent Margin="Margin.Is2">
            @Body
        </LayoutContent>
    </Layout>
</Layout>
@code {
    string selectedTopMenu = "home";
    string selectedSideMenu = "mail";

    async Task ToggleTheme()
    {
        await JSRuntime.InvokeVoidAsync( "toggleTheme" );
    }

    Task ChangePage( string page )
    {
        ApplicationState.ChangePage( page );

        NavigationManager.NavigateTo( $"/{page}" );

        return Task.CompletedTask;
    }

    Task ShowSettings()
    {
        return ModalService.Show<Settings>( "Settings", new ModalInstanceOptions()
        {
            Size = ModalSize.Large,
        } );
    }

    [Inject] private IJSRuntime JSRuntime { get; set; }

    [Inject] private NavigationManager NavigationManager { get; set; }

    [Inject] public IModalService ModalService { get; set; }

    [CascadingParameter] private ApplicationState ApplicationState { get; set; }
}