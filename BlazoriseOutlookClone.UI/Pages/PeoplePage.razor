@page "/people"
@using BlazoriseOutlookClone.Data
@implements IDisposable
<Row>
    <Column>
        <TopBarMenu>
            <NewItemContent>
                <Dropdown RightAligned>
                    <Button Color="Color.Primary" Display="Display.InlineBlock">
                        <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.PersonAdd" IconStyle="IconStyle.Regular" Margin="Margin.Is2" />
                        <Span>New contact</Span>
                    </Button>
                    <DropdownToggle Color="Color.Primary" Split />
                    <DropdownMenu>
                        <DropdownItem>
                            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.PersonAdd" IconSize="IconSize.Large" />
                            New contact
                        </DropdownItem>
                        <DropdownItem>
                            <Icon Name="Blazorise.Icons.FluentUI.FluentUIIcons.PeopleAdd" IconSize="IconSize.Large" />
                            New contact list
                        </DropdownItem>
                    </DropdownMenu>
                </Dropdown>
            </NewItemContent>
            <HomeContent>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Edit" IconColor="TextColor.Primary">Edit</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Delete">Delete</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.ArrowUndo" IconColor="TextColor.Primary">Restore</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.PersonAdd" IconColor="TextColor.Success">Add to contacts</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.StarAdd" IconColor="TextColor.Success">Add to favorites</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.PeopleList">Add to list</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.PeopleTeamAdd" IconColor="TextColor.Success">Add members</TopBarButton>
            </HomeContent>
            <ViewContent>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Settings" IconColor="TextColor.Primary">People settings</TopBarButton>
            </ViewContent>
            <HelpContent>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Question" IconColor="TextColor.Warning">Help</TopBarButton>
                <TopBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.PersonFeedback" IconColor="TextColor.Success">Feedback</TopBarButton>
            </HelpContent>
        </TopBarMenu>
    </Column>
</Row>
<Row>
    @if ( ApplicationState.SidebarVisible )
    {
        <Column ColumnSize="ColumnSize.Is2" Flex="Flex.Column" Padding="Padding.Is2.OnY">
            <SideBarMenu>
                <SideBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Star" Name="Favorites" />
                <SideBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Person" Name="Your contacts" />
                <SideBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.PeopleList" Name="Your contact list" />
                <SideBarButton IconName="Blazorise.Icons.FluentUI.FluentUIIcons.Delete" Name="Deleted" />
            </SideBarMenu>
        </Column>
    }
    <Column ColumnSize="ColumnSize.Is3" Padding="Padding.Is2.OnY.Is2.FromEnd">
        <Card>
            <CardBody Border="Border.Is1.OnBottom" Flex="Flex.Default.JustifyContent.Between.AlignItems.Center" Height="Height.Rem( 3 )">
                <Div>
                    <Check TValue="bool">
                        <Span TextWeight="TextWeight.SemiBold">Your contacts</Span>
                    </Check>
                </Div>
                <Div>
                    <Anchor To="#">By first name</Anchor>
                </Div>
            </CardBody>
            <CardBody Padding="Padding.Is0">
               <ContactList Contacts="@ContactService.GetAllContacts()" ContactKeySelected="@OnContactKeySelected" />
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="@(ApplicationState.SidebarVisible ? ColumnSize.Is7 : ColumnSize.Is9)" Padding="Padding.Is2.OnY.Is2.FromStart">
        @if ( selectedContact != null  )
        {
            <ContactRead Contact="@selectedContact"  />
        }
        else
        {
            <Div Flex="Flex.Default.AlignItems.Center.JustifyContent.Center" Height="Height.Px( 800 )" TextColor="TextColor.Muted" TextSize="TextSize.Large">
                Select contact to read
            </Div>
        }
    </Column>
</Row>
@code{
    [Inject] private ContactService ContactService { get; set; }

    [CascadingParameter] private ApplicationState ApplicationState { get; set; }

    ContactInfo selectedContact;
    string selectedContactKey;

    Task OnContactKeySelected( string key )
    {
        selectedContactKey = key;
        selectedContact = ContactService.GetAllContacts().FirstOrDefault( x => x.Key == selectedContactKey );

        return Task.CompletedTask;
    }

    protected override void OnInitialized()
    {
        ApplicationState.SidebarVisibilityChanged += OnSidebarVisibilityChanged;

        base.OnInitialized();
    }

    public void Dispose()
    {
        ApplicationState.SidebarVisibilityChanged -= OnSidebarVisibilityChanged;
    }

    private void OnSidebarVisibilityChanged( bool visible )
    {
        InvokeAsync( StateHasChanged );
    }
}